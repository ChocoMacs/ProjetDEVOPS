pipeline {
    stages {
        stage('Checkout Code') {
            steps {
                // Cloner le dépôt Git
                git url: 'https://github.com/ChocoMacs/ProjetDEVOPS', branch: 'main'
            }
        } 
    agent any {
    environment {
        // Définir des variables pour SonarQube et Snyk
        SONARQUBE_ENV = 'SonarQube' // Le nom de l'instance SonarQube dans Jenkins
    }   
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Analyser la qualité du code avec SonarQube
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        sh 'sonar-scanner'
                    }
                }
            }
        }

        stage('Dependency Check') {
            steps {
                script {
                    // Scanner les dépendances pour les vulnérabilités avec OWASP Dependency-Check
                    dependencyCheck additionalArguments: '--scan /path/to/project'
                }
            }
        }
        
        stage('Trivy Vulnerability Scan') {
            steps {
                script {
                    // Scanner l'image Docker pour les vulnérabilités critiques avec Trivy
                    sh 'docker build -t choco-xampp:latest .'
                    sh 'trivy image --exit-code 1 --severity HIGH,CRITICAL choco-xampp:latest'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                // Construire l'image Docker si toutes les vérifications sont réussies
                sh 'docker build -t choco-xampp:latest .'
            }
        }
    }
    post {
        success {
            echo 'CI pipeline executed successfully.'
        }
        failure {
            echo 'CI pipeline failed.'
        }
    }
}
}
